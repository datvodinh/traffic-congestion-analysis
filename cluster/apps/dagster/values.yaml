global:
  postgresqlSecretName: "dagster-postgresql-secret"
  dagsterHome: "/opt/dagster/dagster_home"

dagsterWebserver:
  replicaCount: 1
  image:
    repository: "docker.io/dagster/dagster-k8s"
    tag: 1.9.4
    pullPolicy: Always

  nameOverride: "webserver"
  pathPrefix: ~
  service:
    type: ClusterIP
    port: 80
    annotations: {}

  workspace:
    enabled: false
    servers:
      - host: "dagster-pipeline"
        port: 4266
        name: "dagster-pipeline"

  env: []
  envConfigMaps: []
  envSecrets: []

  readinessProbe:
    httpGet:
      path: "/server_info"
      port: 80
    periodSeconds: 20
    timeoutSeconds: 10
    successThreshold: 1
    failureThreshold: 3

  livenessProbe: {}
  startupProbe:
    enabled: false

computeLogManager:
  type: NoOpComputeLogManager

dagster-user-deployments:
  enabled: true
  enableSubchart: true
  imagePullSecrets: []

  deployments:
    - name: "dagster-pipeline"
      image:
        repository: "ghcr.io/datvodinh/traffic-analysis"
        tag: latest
        pullPolicy: Always

      dagsterApiGrpcArgs:
        - "-m"
        - "src"
      port: 4266 # Port for GRPC server

      includeConfigInLaunchedRuns:
        enabled: true

      envConfigMaps:
        - name: dagster-configmap

      readinessProbe:
        enabled: true
        periodSeconds: 20
        timeoutSeconds: 10
        successThreshold: 1
        failureThreshold: 1

      livenessProbe: {}
      startupProbe:
        enabled: false

scheduler:
  type: DagsterDaemonScheduler
  config: {}

runLauncher:
  type: K8sRunLauncher
  config:
    k8sRunLauncher:
      imagePullPolicy: "Always"
      jobNamespace: ~
      loadInclusterConfig: true
      envConfigMaps:
        - name: dagster-configmap
      resources:
        limits:
          cpu: 1
          memory: 512Mi
        requests:
          cpu: 1
          memory: 512Mi

      failPodOnRunFailure: false

dagsterDaemon:
  enabled: true
  image:
    repository: "docker.io/dagster/dagster-k8s"
    tag: 1.9.4
    pullPolicy: Always

  heartbeatTolerance: 1800

  runCoordinator:
    enabled: true

    type: QueuedRunCoordinator
    config:
      queuedRunCoordinator:
        maxConcurrentRuns: 4
        tagConcurrencyLimits: []
        dequeueIntervalSeconds: ~
        dequeueUseThreads: true
        dequeueNumWorkers: 4

  runMonitoring:
    enabled: true
    startTimeoutSeconds: 300
    pollIntervalSeconds: 120
    maxResumeRunAttempts: 0
    freeSlotsAfterRunEndSeconds: 0

  runRetries:
    enabled: true
    maxRetries: 0

  sensors:
    useThreads: true
    numWorkers: 16
    numSubmitWorkers: 4

  envConfigMaps:
    - name: dagster-configmap

postgresql:
  enabled: true
  image:
    repository: "library/postgres"
    tag: "14.6"
    pullPolicy: IfNotPresent
  postgresqlHost: ""
  postgresqlUsername: test
  postgresqlPassword: test
  postgresqlDatabase: test
  postgresqlParams: {}
  postgresqlScheme: ""
  service:
    port: 5432
generatePostgresqlPasswordSecret: true
generateCeleryConfigSecret: true

telemetry:
  enabled: false

retention:
  enabled: false
  schedule:
    purgeAfterDays: -1
  sensor:
    purgeAfterDays:
      failure: -1
      skipped: 7
      started: -1
      success: -1
  autoMaterialize:
    purgeAfterDays:
      failure: -1
      skipped: 7
      started: -1
      success: -1
