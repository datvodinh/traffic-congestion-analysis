global:
  imageRegistry: ""
  imagePullSecrets: []
  defaultStorageClass: ""
  storageClass: ""
  compatibility:
    openshift:
      adaptSecurityContext: auto

clusterDomain: cluster.local

diagnosticMode:
  enabled: false

  command:
    - sleep

  args:
    - infinity

image:
  registry: docker.io
  repository: bitnami/spark
  tag: 3.5.3-debian-12-r1
  digest: ""

  pullPolicy: IfNotPresent

  pullSecrets: []

  debug: false

hostNetwork: false

master:
  existingConfigmap: ""
  containerPorts:
    http: 8080
    https: 8480
    cluster: 7077
  automountServiceAccountToken: false
  podSecurityContext:
    enabled: true
    fsGroupChangePolicy: Always
    sysctls: []
    supplementalGroups: []
    fsGroup: 1001
  containerSecurityContext:
    enabled: true
    runAsUser: 1001
    runAsGroup: 1001
    runAsNonRoot: true
    privileged: false
    readOnlyRootFilesystem: true
    allowPrivilegeEscalation: false
    capabilities:
      drop: ["ALL"]
    seccompProfile:
      type: "RuntimeDefault"
  resources:
    limits:
      cpu: 1
      memory: 2G
    requests:
      cpu: 1
      memory: 2G
  livenessProbe:
    enabled: true
    initialDelaySeconds: 180
    periodSeconds: 20
    timeoutSeconds: 5
    failureThreshold: 6
    successThreshold: 1
  readinessProbe:
    enabled: true
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 6
    successThreshold: 1
  startupProbe:
    enabled: false
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 6
    successThreshold: 1
  networkPolicy:
    enabled: true
    allowExternal: true
    allowExternalEgress: true
  pdb:
    create: true
    minAvailable: ""
    maxUnavailable: ""

worker:
  existingConfigmap: ""
  containerPorts:
    http: 8080
    https: 8480
    cluster: ""
  automountServiceAccountToken: false
  replicaCount: 3
  resources:
    limits:
      cpu: 2
      memory: 8G
    requests:
      cpu: 2
      memory: 8G
  podSecurityContext:
    enabled: true
    fsGroupChangePolicy: Always
    sysctls: []
    supplementalGroups: []
    fsGroup: 1001
    seLinuxOptions: {}
  containerSecurityContext:
    enabled: true
    seLinuxOptions: {}
    runAsUser: 1001
    runAsGroup: 1001
    runAsNonRoot: true
    privileged: false
    readOnlyRootFilesystem: true
    allowPrivilegeEscalation: false
    capabilities:
      drop: ["ALL"]
    seccompProfile:
      type: "RuntimeDefault"
  podAntiAffinityPreset: soft
  updateStrategy:
    type: RollingUpdate
  podManagementPolicy: OrderedReady
  livenessProbe:
    enabled: true
    initialDelaySeconds: 180
    periodSeconds: 20
    timeoutSeconds: 5
    failureThreshold: 6
    successThreshold: 1
  readinessProbe:
    enabled: true
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 6
    successThreshold: 1
  startupProbe:
    enabled: true
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 6
    successThreshold: 1
  networkPolicy:
    enabled: true
    allowExternal: true
    allowExternalEgress: true
  pdb:
    create: true
    minAvailable: ""
    maxUnavailable: ""

security:
  passwordsSecretName: ""
  rpc:
    authenticationEnabled: false
    encryptionEnabled: false
  storageEncryptionEnabled: false
  certificatesSecretName: ""
  ssl:
    enabled: false
    needClientAuth: false
    protocol: TLSv1.2
    existingSecret: ""
    autoGenerated: false
    keystorePassword: ""
    truststorePassword: ""
    resourcesPreset: "small"
    resources: {}

service:
  type: ClusterIP
  ports:
    http: 80
    https: 443
    cluster: 7077
  externalTrafficPolicy: Cluster
  sessionAffinity: None

ingress:
  enabled: true
  pathType: ImplementationSpecific
  apiVersion: ""
  hostname: spark.local
  ingressClassName: ""
  path: /
  annotations: {}
  tls: false
  selfSigned: false

serviceAccount:
  create: true
  name: ""
  automountServiceAccountToken: false